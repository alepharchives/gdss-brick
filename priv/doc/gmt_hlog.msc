
## An attempt at documenting the flow of writes in the gmt_hlog.erl
## implementation.

msc {
    hscale = "1.5";
    Brick, LocalLog, LocalLogSync, HelpProc;

    --- [label="Brick initialization"];
    Brick->LocalLog [label="spawn, init..."];
    LocalLog=>LocalLog [label="Open short term log file"];
    LocalLog=>LocalLog [label="Open long term log file"];
    Brick->LocalLogSync [label="spawn, init..."];

    --- [label="Write a hunk asynchronously"];
    Brick->LocalLog [label="write_hunk(shortterm|longterm, Bytes)"];
    LocalLog=>LocalLog [label="Write to short|long"];
    LocalLog->Brick [label="{ok, SeqNum, Offset}"];
    Brick=>Brick [label="Send Mods downstream, etc..."];

    --- [label="Write a hunk synchronously"];
    Brick=>Brick [label="Incr. chain serial number: Serial"];
    Brick->LocalLog [label="write_hunk(shortterm, Bytes)"];
    LocalLog=>LocalLog [label="Write to short"];
    LocalLog->Brick [label="{ok, SeqNum, Offset}"];
    Brick->LocalLogSync [label="{sync_msg, Serial}"];
    Brick=>Brick [label="Add Serial+Mods to #state.logging_op_q"];
    LocalLogSync=>LocalLogSync [label="Collect more {sync_msg,Serial}..."];
    Brick=>Brick [label="Maybe process more Mods requests...goto 'Incr. chain serial...'"];
    LocalLogSync->HelpProc [label="Spawn..."];
    HelpProc=>HelpProc [label="Open shortterm file"];
    HelpProc=>HelpProc [label="file:sync()"];
    HelpProc->Brick [label="{sync_done,self(),LastSerial}"];
    HelpProc=>HelpProc [label="exit()"];
    Brick=>Brick [label="Find Mods =< LastSerial"];
    Brick=>Brick [label="Send Mods downstream, etc..."];

    --- [label=""];
    --- [label=""];
    --- [label=""];

}
