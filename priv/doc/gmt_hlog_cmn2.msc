
## An attempt at documenting the flow of writes in the gmt_hlog_cmn.erl
## implementation.

msc {
    hscale = "1.5";
    Brick, LocalLog, LocalLogSync, CommonLog, CommonLogSync, HelpProc;

    --- [label="Write a bigdata_dir key (data on disk) hunk synchronously"];

    Brick=>Brick [label="Incr. chain serial number: Serial\nChecksum hunk\nFormat hunk -> Bytes"];
    Brick box Brick [label="Value blob first"];
    Brick=>LocalLog [label="write_hunk(LocalLog,BrName,bigblob,Key,TypeNum,CBlobs,UBlobs)"];
    LocalLog=>CommonLog [label="{write_hunk,BrName,bigblob,Key,TypeNum,Len,Bytes}"];
    CommonLog=>CommonLog [label="Write to shortterm storage with checksum"];
    CommonLog>>LocalLog [label="{ok,C_SeqNum,C_Offset}"];
    LocalLog>>Brick [label="{ok,C_SeqNum,C_Offset}"];
    LocalLog=>LocalLog [label="Increment local offset and maybe seq num"];

    Brick box Brick [label="Key metadata second"];
    Brick=>LocalLog [label="write_hunk(LocalLog,BrName,metadata,Key,TypeNum,CBlobs,UBlobs)"];
    LocalLog=>LocalLog [label="Get current SeqNum & Offset"];
    LocalLog=>CommonLog [label="{write_hunk,BrName,metadata,Key,TypeNum,Len,Bytes}"];
    CommonLog=>CommonLog [label="Write to shortterm storage, using *un*checksummed wrapper\nContents are already checksummed!"];
    CommonLog>>LocalLog [label="{ok,C_SeqNum,C_Offset}"];
    LocalLog=>LocalLog [label="Ignore common's seq num & offset\nIncrement local offset and maybe seq num"];
    LocalLog>>Brick [label="{ok,SeqNum,Offset}"];
    LocalLog=>LocalLog [label="Increment local offset and maybe seq num"];
    Brick=>Brick [label="Add Serial+Mods to #state.logging_op_q"];

    Brick->LocalLogSync [label="{sync_msg,Serial}"];
    Brick box LocalLog [label="Maybe process more Mods requests...goto top of flow."];
    LocalLogSync=>LocalLogSync [label="Collect more {sync_msg,Serial}..."];
    LocalLogSync->CommonLog [label="{sync_please,MyName,Serial}"];
    CommonLog=>CommonLog [label="Update sync request list from local bricks."];
    CommonLog->CommonLogSync [label="Forward {sync_please,_,_}, I guess??"];
    CommonLogSync=>CommonLogSync [label="Collect more {sync_please,_,_}..."];
    CommonLogSync->HelpProc [label="Spawn..."];
    HelpProc=>HelpProc [label="Open shortterm file"];
    HelpProc=>HelpProc [label="file:sync()"];
    HelpProc->CommonLog [label="{sync_done,StuffMaybe}"];
    HelpProc=>HelpProc [label="exit()"];
    CommonLog=>CommonLog [label="Foreach sync request..."];
    CommonLog->LocalLogSync [label="{sync_done,YourLastSerial}"];
    LocalLogSync->Brick [label="{sync_done,LastSerial}"];
    Brick=>Brick [label="For all Mods in #state.logging_op_q such that #log_q.logging_serial =< LastSerial, send Mods downstream, etc..."];

}
