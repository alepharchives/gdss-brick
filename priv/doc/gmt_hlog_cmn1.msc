
## An attempt at documenting the flow of writes in the gmt_hlog_cmn.erl
## implementation.

msc {
    hscale = "1.5";
    Brick, LocalLog, LocalLogSync, CommonLog, CommonLogSync;

    --- [label="App initialization"];

    CommonLog=>CommonLog [label="Spawn by supervisor..."];
    CommonLog=>CommonLog [label="Open short term log file\nOpen long term log file"];
    CommonLog->CommonLogSync [label="spawn, init..."];

    --- [label="Brick initialization"];

    Brick->LocalLog [label="spawn, init..."];
    LocalLog=>LocalLog [label="Open short term log file\nOpen long term log file"];
    Brick->LocalLogSync [label="spawn, init..."];

    --- [label="Write a hunk asynchronously"];

    Brick=>Brick [label="Checksum hunk\nFormat hunk -> Bytes"];
    Brick=>LocalLog [label="write_hunk(LocalLog,BrName,metadata | bigblob,Key,TypeNum,CBlobs,UBlobs)"];
    LocalLog=>LocalLog [label="Get current SeqNum & Offset"];
    LocalLog=>CommonLog [label="{write_hunk,BrName,metadata | bigblob,Key,TypeNum,Len,Bytes}"];
    CommonLog=>CommonLog [label="Write to shortterm storage, using *un*checksummed wrapper\nContents are already checksummed!"];
    CommonLog>>LocalLog [label="{ok, C_SeqNum, C_Offset}"];
    LocalLog=>LocalLog [label="If metadata, ignore common's seq num & offset\nIncrement local offset and maybe seq num"];
    LocalLog=>LocalLog [label="If bigblob, return C_SeqNum & C_Offset"];
    LocalLog->Brick [label="{ok, SeqNum, Offset}"];
    Brick=>Brick [label="Send Mods downstream, etc..."];

    ...;
    --- [label="Lazy write-back flow is omitted here, see write-back flows."];

}
